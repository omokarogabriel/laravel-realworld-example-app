# # For more information: https://laravel.com/docs/sail
# version: '3.9'

# services:
#     laravel.test:
#         build:
#             context: ./vendor/laravel/sail/runtimes/8.1
#             dockerfile: Dockerfile
#             args:
#                 WWWGROUP: '${WWWGROUP}'
#         image: sail-8.1/app
#         extra_hosts:
#             - 'host.docker.internal:host-gateway'
#         ports:
#             - '${APP_PORT:-80}:80'
#             - '${HMR_PORT:-8080}:8080'
#         environment:
#             PHP_IDE_CONFIG: 'serverName=laravel-realworld.test'
#             WWWUSER: '${WWWUSER}'
#             LARAVEL_SAIL: 1
#             XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
#             XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
#         volumes:
#             - '.:/var/www/html'
#         networks:
#             - sail
#         depends_on:
#             - pgsql

#     pgsql:
#         image: 'postgres:14-alpine'
#         ports:
#             - '${FORWARD_DB_PORT:-5432}:5432'
#         environment:
#             # PGPASSWORD: '${DB_PASSWORD:-secret}'
#             PGPASSWORD: "laravelpass"
#             # POSTGRES_DB: '${DB_DATABASE}'
#             POSTGRES_DB: "postgres"
#             # POSTGRES_USER: '${DB_USERNAME}'
#             POSTGRES_USER: "laraveluser"
#             # POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
#             POSTGRES_PASSWORD: "laravelpass"

#             # DB_CONNECTION=pgsql
#             # DB_HOST=postgres
#             # DB_PORT=5432
#             # DB_DATABASE=laravel
#             # DB_USERNAME=laraveluser
#             # DB_PASSWORD=laravelpass


#         volumes:
#             - 'sail-pgsql:/var/lib/postgresql/data'
#             - './vendor/laravel/sail/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
#         networks:
#             - sail
#         healthcheck:
#             # test: [ "CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}" ]
#             test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
#             retries: 3
#             timeout: 5s

# networks:
#     sail:
#         name: laravel-realworld-network
#         driver: bridge

# volumes:
#     sail-pgsql:
#         name: laravel-realworld-database
#         driver: local







# version: '3.8'

# services:
#   laravel-container:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     container_name: laravel-container
#     volumes:
#       - ./src:/var/www/html
#     networks:
#       - laravel_net

#   nginx-container:
#     image: nginx:latest
#     container_name: nginx-container
#     ports:
#       - "8080:80"
#     volumes:
#       - ./src:/var/www/html
#       - ./nginx.conf:/etc/nginx/conf.d/default.conf
#     depends_on:
#       - laravel-container
#     networks:
#       - laravel_net

#   postgres:
#     image: postgres:15
#     container_name: postgres-db
#     environment:
#       POSTGRES_DB: laravel
#       POSTGRES_USER: laraveluser
#       POSTGRES_PASSWORD: laravelpass
#     ports:
#       - "5432:5432"
#     volumes:
#       - pgdata:/var/lib/postgresql/data
#     networks:
#       - laravel_net

# networks:
#   laravel_net:
#     driver: bridge

# volumes:
#   pgdata:


# DB_CONNECTION=pgsql
# DB_HOST=postgres
# DB_PORT=5432
# DB_DATABASE=laravel
# DB_USERNAME=laraveluser
# DB_PASSWORD=laravelpass









# version: '3.8'

# services:
#   postgres:
#     image: postgres:15
#     container_name: local-postgres
#     restart: always
#     environment:
#       POSTGRES_DB: laravel
#       POSTGRES_USER: laravel
#       POSTGRES_PASSWORD: secret
#     ports:
#       - "5432:5432"
#     volumes:
#       - db-data:/var/lib/postgresql/data

#   laravel:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     container_name: laravel-app
#     restart: always
#     working_dir: /var/www/html
#     volumes:
#       - .:/var/www/html
#     environment:
#       DB_CONNECTION: pgsql
#       DB_HOST: postgres
#       DB_PORT: 5432
#       DB_DATABASE: laravel
#       DB_USERNAME: laravel
#       DB_PASSWORD: secret
#     depends_on:
#       - postgres

#   nginx:
#     image: nginx:latest
#     container_name: nginx-server
#     restart: always
#     ports:
#       - "8080:80"
#     volumes:
#       - .:/var/www/html
#       - ./nginx.conf:/etc/nginx/conf.d/default.conf
#     depends_on:
#       - laravel

# volumes:
#   db-data:









# version: "3.8"

# services:
#   app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     container_name: laravel_app
#     ports:
#       - "8000:8000"
#     volumes:
#       - .:/var/www/html
#     depends_on:
#       - db
#       - redis
#     environment:
#       DB_CONNECTION: ${DB_CONNECTION}
#       DB_HOST: ${DB_HOST}
#       DB_PORT: ${DB_PORT}
#       DB_DATABASE: ${DB_DATABASE}
#       DB_USERNAME: ${DB_USERNAME}
#       DB_PASSWORD: ${DB_PASSWORD}
#       REDIS_HOST: ${REDIS_HOST}
#       REDIS_PORT: ${REDIS_PORT}
#     command: php artisan serve --host=0.0.0.0 --port=8000

#   node:
#     image: node:18
#     context: .
#     dockerfile: Dockerfilenginx
#     container_name: node-build
#     working_dir: /app
#     volumes:
#       - .:/app
#     command: npm run dev
#     ports:
#       - "5173:5173"  

#   db:
#     image: postgres:16-alpine
#     container_name: postgres_db
#     ports:
#       - "5432:5432"
#     environment:
#       POSTGRES_DB: laravel_db
#       POSTGRES_USER: laravel_user
#       POSTGRES_PASSWORD: secret
#     volumes:
#       - pgdata:/var/lib/postgresql/data

# #   pgadmin:
# #     image: dpage/pgadmin4
# #     container_name: pgadmin
# #     ports:
# #       - "5050:80"
# #     environment:
# #       PGADMIN_DEFAULT_EMAIL: admin@admin.com
# #       PGADMIN_DEFAULT_PASSWORD: admin
# #     depends_on:
# #       - db

#   redis:
#     image: redis:7-alpine
#     container_name: laravel_redis
#     ports:
#       - "6379:6379"

# volumes:
#   pgdata:



# version: "3.8"

# services:
#   app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     container_name: laravel_app
#     restart: unless-stopped
#     working_dir: /var/www/html
#     volumes:
#       - .:/var/www/html
#     depends_on:
#       - db
#       - redis
#     environment:
#       DB_CONNECTION: ${DB_CONNECTION}
#       DB_HOST: ${DB_HOST}
#       DB_PORT: ${DB_PORT}
#       DB_DATABASE: ${DB_DATABASE}
#       DB_USERNAME: ${DB_USERNAME}
#       DB_PASSWORD: ${DB_PASSWORD}
#       REDIS_HOST: ${REDIS_HOST}
#       REDIS_PORT: ${REDIS_PORT}
#     command: php-fpm

#   nginx:
#     image: nginx:latest
#     container_name: laravel_nginx
#     restart: unless-stopped
#     ports:
#       - "8000:80"
#     volumes:
#       - .:/var/www/html
#       - ./nginx.conf:/etc/nginx/conf.d/default.conf
#     depends_on:
#       - app

#   node:
#     build:
#       context: .
#       dockerfile: Dockerfilenginx
#     container_name: node-build
#     working_dir: /app
#     volumes:
#       - .:/app
#     command: npm run dev
#     ports:
#       - "5173:5173"

#   db:
#     image: postgres:16-alpine
#     container_name: postgres_db
#     restart: unless-stopped
#     ports:
#       - "5432:5432"
#     environment:
#       POSTGRES_DB: laravel_db
#       POSTGRES_USER: laravel_user
#       POSTGRES_PASSWORD: secret
#     volumes:
#       - pgdata:/var/lib/postgresql/data

#   redis:
#     image: redis:7-alpine
#     container_name: laravel_redis
#     restart: unless-stopped
#     ports:
#       - "6379:6379"

# volumes:
#   pgdata:
















# version: "3.8"

# services:
#   app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     container_name: laravel_app
#     restart: unless-stopped
#     working_dir: /var/www/html
#     volumes:
#       - .:/var/www/html
#     depends_on:
#       - db
#       - redis
#     environment:
#       DB_CONNECTION: ${DB_CONNECTION}
#       DB_HOST: db
#       DB_PORT: 5432
#       DB_DATABASE: ${DB_DATABASE}
#       DB_USERNAME: ${DB_USERNAME}
#       DB_PASSWORD: ${DB_PASSWORD}
#       REDIS_HOST: redis
#       REDIS_PORT: 6379
#     command: php-fpm

#   nginx:
#     image: nginx:latest
#     container_name: laravel_nginx
#     restart: unless-stopped
#     ports:
#       - "8000:80"
#     volumes:
#       - .:/var/www/html
#       - ./nginx.conf:/etc/nginx/conf.d/default.conf
#     depends_on:
#       - app

#   # node:
#   #   image: node:22-alpine
#   #   container_name: node_dev
#   #   working_dir: /app
#   #   volumes:
#   #     - ./frontend:/app
#   #   command: sh -c "npm install && npm run dev"
#   #   ports:
#   #     - "5173:5173"

#   db:
#     image: postgres:16-alpine
#     container_name: postgres_db
#     restart: unless-stopped
#     ports:
#       - "5432:5432"
#     environment:
#       POSTGRES_DB: laravel_db
#       POSTGRES_USER: laravel_user
#       POSTGRES_PASSWORD: secret
#     volumes:
#       - pgdata:/var/lib/postgresql/data

#   redis:
#     image: redis:7-alpine
#     container_name: laravel_redis
#     restart: unless-stopped
#     ports:
#       - "6379:6379"

# volumes:
#   pgdata:






version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - .env:/var/www/html/.env
    depends_on:
      - db
      - redis
    environment:
      DB_CONNECTION: ${DB_CONNECTION}
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: redis
      REDIS_PORT: 6379
    command: php-fpm -F -R


  nginx:
    image: nginx:latest
    container_name: laravel_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - .:/var/www/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app

  # node:
  #   image: node:22-alpine
  #   container_name: node_dev
  #   working_dir: /app
  #   volumes:
  #     - ./frontend:/app
  #   command: sh -c "npm install && npm run dev"
  #   ports:
  #     - "5173:5173"

  db:
    image: postgres:16-alpine
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: laravel_db
      POSTGRES_USER: laravel_user
      POSTGRES_PASSWORD: secret
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: laravel_redis
    restart: unless-stopped

volumes:
  pgdata:

